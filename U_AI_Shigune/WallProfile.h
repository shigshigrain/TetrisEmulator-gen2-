#pragma once
#include "shig_utility.h"

namespace shig {

	struct Gap {
		size_t Y = 0;
		int XL = 0;
		int XR = 0;
		int Center = 0;
		size_t Size = 0;
	};

	struct WallProf {
		size_t Y = 0;
		size_t NumGap = 0;
		std::vector<Gap> GapList;
	};

	const std::vector<LL> gn_score = {0 , 1000, 200, 100,  -100,  -200};

	// [(i-1)->GapSize][(i)->GapSize] = score (Center == Center)
	const std::vector<std::vector<LL>> WG_Center = {
		{     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,}, // 0-
		{     0,  1500,  -100,  1000,   200,   300,     0,   200,     0,   100,     0 }, // 1-
		{     0, -6000, -4000,   500,   -50,  -200,  -200,     0,  -200,     0,  -200 }, // 2-
		{     0, -2000,  1000,  -100,   -50,   500,     0,   100,     0,   100,     0 }, // 3-
		{     0,  -500,  -500,  -100,   -50,   -50,   -50,   -50,   -50,   -50,   -50 }, // 4-
		{     0,  -500,  -500,  -200,  -100,   -50,   -50,  -100,   -50,  -100,   -50 }, // 5-
		{     0,  -500,  -500,  -200,  -200,  -200,  -100,   -50,   -50,   -50,   -50 }, // 6-
		{     0,  -500,  -500,  -500,  -500,  -500,  -200,   -50,   -50,  -100,   -50 }, // 7-
		{     0,  -500,  -500,  -500,  -500,  -500,  -500,  -200,  -100,   -50,   -50 }, // 8-
		{     0,  -500,  -500,  -500,  -500,  -500,  -500,  -500,  -200,  -100,   -50 }, // 9-
		{     0,  -500,  -500,  -500,  -500,  -500,  -500,  -500,  -300,  -200,  -100 }, // 10-
	};

	// [(i-1)->GapSize][(i)->GapSize] = score (Center == Center - 1)
	const std::vector<std::vector<LL>> WG_L1 = {
		{     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,}, // 0-
		{     0, -4000, -8000,   300,   300,   500,     0,   100,     0,   100,     0 }, // 1-
		{     0, -8000, -6000, -2000,   100,   100,  -200,  -100,  -200,  -100,  -200 }, // 2-
		{     0, -4000, -3000, -1000,   100,   200,     0,   100,     0,   100,     0 }, // 3-
		{     0, -2000, -1000,  -500,  -100,  -100,   -50,   -50,   -50,   -50,   -50 }, // 4-
		{     0, -1000,  -500,  -500,  -100,  -100,  -100,  -100,   -50,  -100,   -50 }, // 5-
		{     0,  -500,  -500,  -500,  -200,  -200,  -100,   -50,   -50,   -50,   -50 }, // 6-
		{     0,  -500,  -500,  -500,  -300,  -200,  -200,   -50,   -50,  -100,   -50 }, // 7-
		{     0,  -500,  -500,  -500,  -500,  -300,  -300,  -200,  -100,   -50,   -50 }, // 8-
		{     0,  -500,  -500,  -500,  -500,  -500,  -500,  -300,  -200,  -100,   -50 }, // 9-
		{     0,  -500,  -500,  -500,  -500,  -500,  -500,  -500,  -300,  -200,  -100 }, // 10-
	};


}
